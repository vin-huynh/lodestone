{"version":3,"sources":["Components/ChordFinder/ShapeSelector/ShapeSelector.module.css","Components/ChordCreator/ChordCreator.module.css","Components/About/About.module.css","Components/NoteButton/NoteButton.module.css","Components/Header/NavBar/NavTitle/NavTitle.module.css","Components/ChordPage/ChordTitle/ChordTitle.module.css","Components/ChordPage/ChordNotes/ChordNotes.module.css","Components/ChordFinder/SelectorPage/SelectorPage.module.css","Components/Header/NavBar/NavBar.module.css","Components/ChordPage/ChordDiagram/ChordDiagram.module.css","Components/ChordFinder/ChordFinder.module.css","Components/ChordFinder/ShapeSelector/Shape/Shape.module.css","Components/ChordFinder/QualitySelector/QualitySelector.module.css","Components/Header/Header.module.css","Components/Header/NavBar/NavLink/NavLink.module.css","Components/ChordPage/ChordPage.module.css","Components/ChordPage/ChordTraits/ChordTraits.module.css","Components/ToneAudio/PlayButton/PlayButton.module.css","Components/ToneAudio/ToneAudio.module.css","Components/ChordFinder/RootSelector/RootSelector.module.css","Components/Header/NavBar/NavTitle/NavTitle.js","Components/Header/NavBar/NavLink/NavLink.js","Components/Header/NavBar/NavBar.js","Components/Header/Header.js","Components/ChordPage/ChordTitle/ChordTitle.js","Components/ChordPage/ChordNotes/ChordNotes.js","Components/ChordPage/ChordDiagram/ChordDiagram.js","Components/ChordPage/ChordTraits/ChordTraits.js","Components/ChordPage/ChordPage.js","Piano/Samples.js","Piano/Piano.js","Components/ToneAudio/PlayButton/PlayButton.js","Violins/Samples.js","Violins/Violins.js","Violins/PizzSamples.js","Violins/Pizz.js","Components/ToneAudio/ToneAudio.js","Components/About/About.js","Components/NoteButton/NoteButton.js","Components/ChordCreator/ChordCreator.js","Components/ChordFinder/SelectorPage/SelectorPage.js","Components/ChordFinder/RootSelector/RootSelector.js","Components/ChordFinder/ShapeSelector/Shape/Shape.js","Components/ChordFinder/ShapeSelector/ShapeSelector.js","Chords.js","Components/ChordFinder/QualitySelector/QualitySelector.js","Components/ChordFinder/ChordFinder.js","Components/ToneWrapper/ToneWrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navTitle","props","className","classes","titleBox","title","subTitle","navLink","to","children","navBar","NavTitle","navLinks","NavLink","header","NavBar","chordTitle","root","quality","chordNotes","noteList","notes","map","note","notePlayed","replace","key","playedNote","src","process","ChordDiagram","diagramContainer","diagram","alt","ChordTraits","traitList","traits","trait","formattedTrait","charAt","toUpperCase","slice","toLowerCase","chordPage","letterNotes","ChordTitle","ChordNotes","octaves","samplePath","forEach","letter","octave","push","samples","noteFilename","includes","console","log","piano","Tone","Samples","chain","playButton","onClick","togglePlay","r","sw","vol","f","violins","violinPizz","ToneAudio","melody","time","Math","random","noteIdx","floor","length","Piano","triggerAttack","setNotePlayed","bass","transpose","harmony","n","i","duration","Pizz","triggerAttackRelease","Violins","bind","prevProps","this","state","dispose","stop","start","toneAudio","PlayButton","React","Component","about","aboutMain","aboutHelp","aboutHelpContent","noteButton","toggled","singleToggle","onSingle","on","off","toggleHandler","idx","ChordCreator","useState","Array","fill","buttons","setButtons","updatedButtons","splice","noteButtons","NoteButton","selectedNotes","filter","filler","center","chordCreator","save","setRoot","setIntervals","intervals","getIntervals","selectorPage","content","RootSelector","selectRoot","SelectorPage","Shape","points","angle","PI","vertices","x","radius","cos","y","sin","path","join","height","width","shape","poly","shapes","ShapeSelector","shapeSelector","setShape","btn","subBtn","addBtn","shapeName","chords","QualitySelector","qualities","Object","entries","entry","setQuality","ChordFinder","result","link","ToneWrapper","maj","setTraits","harmonize","toNote","setNotes","useEffect","Header","exact","render","ChordPage","component","About","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c8a78ab1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ShapeSelector_btn__7HUub\",\"shapeSelector\":\"ShapeSelector_shapeSelector__1VVa5\",\"shape\":\"ShapeSelector_shape__3z1VD\",\"addBtn\":\"ShapeSelector_addBtn__3yGVq\",\"subBtn\":\"ShapeSelector_subBtn__26hTd\",\"shapeName\":\"ShapeSelector_shapeName__A0f87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordCreator\":\"ChordCreator_chordCreator__3PuIz\",\"noteButtons\":\"ChordCreator_noteButtons__2WS_b\",\"selectedNotes\":\"ChordCreator_selectedNotes__o87Hz\",\"save\":\"ChordCreator_save__ttwjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__1kQBe\",\"aboutMain\":\"About_aboutMain__2PqPg\",\"aboutHelp\":\"About_aboutHelp__3o6iI\",\"aboutHelpContent\":\"About_aboutHelpContent__1pRTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteButton\":\"NoteButton_noteButton__tdi8_\",\"onSingle\":\"NoteButton_onSingle__1POY8\",\"fade\":\"NoteButton_fade__2pVIF\",\"on\":\"NoteButton_on__FoZm5\",\"off\":\"NoteButton_off__1O4tN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBox\":\"NavTitle_titleBox__1lmXo\",\"title\":\"NavTitle_title__1_ex1\",\"subTitle\":\"NavTitle_subTitle__KX5z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBox\":\"ChordTitle_titleBox__1r46S\",\"title\":\"ChordTitle_title__1u15w\",\"subTitle\":\"ChordTitle_subTitle__3tOVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteList\":\"ChordNotes_noteList__2PmVW\",\"playedNote\":\"ChordNotes_playedNote__1L7ZB\",\"ripple\":\"ChordNotes_ripple__KgrH_\",\"note\":\"ChordNotes_note__2VKp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectorPage\":\"SelectorPage_selectorPage__26uB0\",\"title\":\"SelectorPage_title__14f7f\",\"content\":\"SelectorPage_content__18FYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__TQAMf\",\"navLinks\":\"NavBar_navLinks__3iU-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diagramContainer\":\"ChordDiagram_diagramContainer__B1k8m\",\"diagram\":\"ChordDiagram_diagram__3JzL_\",\"rotation\":\"ChordDiagram_rotation__3ugLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ChordFinder_result__2l9N9\",\"link\":\"ChordFinder_link__3-BrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shape\":\"Shape_shape__1Qok9\",\"spin\":\"Shape_spin__OwVLS\",\"poly\":\"Shape_poly__3NQOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"QualitySelector_btn__20EgC\",\"drop\":\"QualitySelector_drop__1oTJd\",\"qualities\":\"QualitySelector_qualities__2cS8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2uhMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavLink_navLink__1N3u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chordPage\":\"ChordPage_chordPage__39AmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"traitList\":\"ChordTraits_traitList__VfxYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playButton\":\"PlayButton_playButton__1swpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toneAudio\":\"ToneAudio_toneAudio__2-x7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteButtons\":\"RootSelector_noteButtons__tLTEL\"};","import React from 'react';\r\nimport classes from './NavTitle.module.css';\r\n\r\nconst navTitle = (props) => {\r\n    return (\r\n        <div className={classes.titleBox}>\r\n            <p className={classes.title}>LODESTONE:</p>\r\n            <p className={classes.subTitle}>THE CHORD FINDER</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default navTitle;","import React from 'react';\r\nimport { Router, Link } from 'react-router-dom';\r\nimport classes from './NavLink.module.css';\r\n\r\nconst navLink = (props) => {\r\n    return (\r\n        <Link className={classes.navLink} to={props.to}>\r\n                {props.children}\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default navLink;","import React from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport NavTitle from './NavTitle/NavTitle';\r\nimport NavLink from './NavLink/NavLink';\r\n\r\nconst navBar = (props) => {\r\n    return (\r\n        <div className={classes.navBar}>\r\n            <NavTitle />\r\n            <div className={classes.navLinks}>\r\n                <NavLink to='/explore'>\r\n                    EXPLORE\r\n                </NavLink>\r\n                <NavLink to='/create'>\r\n                    CREATE\r\n                </NavLink>\r\n                <NavLink to='/about'>\r\n                    ABOUT\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default navBar;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport NavBar from './NavBar/NavBar';\r\n\r\nconst header = (props) => {\r\n    return (\r\n        <div className={classes.header}>\r\n            <NavBar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;\r\n\r\n","import React from 'react';\r\nimport classes from './ChordTitle.module.css';\r\n\r\nconst chordTitle = (props) => {\r\n    return (\r\n        <div className={classes.titleBox}>\r\n            <p className={classes.title}>\r\n                {props.root}\r\n            </p>\r\n            <p className={classes.subTitle}>\r\n                {props.quality}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default chordTitle;","import React from 'react';\r\nimport classes from './ChordNotes.module.css';\r\n\r\nconst chordNotes = (props) => {\r\n\r\n    const noteList = props.notes.map(note => {\r\n        if(note === props.notePlayed.replace(/\\d/,\"\")) {\r\n            return <li key={note} className={classes.playedNote}>{note}</li>;\r\n        } else {\r\n            return <li key={note} className={classes.note}>{note}</li>;\r\n        }\r\n        \r\n    });\r\n\r\n    return (\r\n        <ul className={classes.noteList}>\r\n            {noteList}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default chordNotes;","import React from 'react';\r\nimport classes from './ChordDiagram.module.css';\r\n\r\nconst src = `${process.env.PUBLIC_URL}/hiclipart.com.png`;\r\n\r\nconst ChordDiagram = (props) => {\r\n    return (\r\n        <div className={classes.diagramContainer}>\r\n            <img \r\n                className={classes.diagram}\r\n                src={src}\r\n                alt=\"chord diagram\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChordDiagram;","import React from 'react';\r\nimport classes from './ChordTraits.module.css';\r\n\r\nconst ChordTraits = (props) => {\r\n    const traitList = props.traits.map(trait => {\r\n        const formattedTrait = trait.charAt(0).toUpperCase() + trait.slice(1).toLowerCase();\r\n        return <li key={trait}>{formattedTrait}.</li>;\r\n    });\r\n\r\n    return (\r\n        <ul className={classes.traitList}>\r\n            {traitList}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ChordTraits;","import React from 'react';\r\nimport classes from './ChordPage.module.css';\r\nimport ChordTitle from './ChordTitle/ChordTitle';\r\nimport ChordNotes from './ChordNotes/ChordNotes';\r\nimport ChordDiagram from './ChordDiagram/ChordDiagram';\r\nimport ChordTraits from './ChordTraits/ChordTraits';\r\n\r\nconst chordPage = (props) => {\r\n\r\n    const letterNotes = props.notes.map(note => note.replace(/\\d/,\"\"));\r\n\r\n    return(\r\n        <div className={classes.chordPage}>\r\n            <ChordTitle root={props.root} quality={props.quality} />\r\n            <ChordNotes notes={letterNotes} notePlayed={props.notePlayed}/>\r\n            <ChordDiagram />\r\n            <ChordTraits traits={props.traits} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default chordPage;","const letters = [\"A\",\"C\",\"D#\",\"F#\"];\r\nconst octaves = [1, 2, 3, 4, 5, 6];\r\nconst samplePath = `${process.env.PUBLIC_URL}/PianoSamples/`;\r\nconst velocity = 1;\r\n\r\nconst notes = [];\r\n\r\nletters.forEach(letter => {\r\n    octaves.forEach(octave => {\r\n        notes.push(letter+octave);\r\n    });\r\n});\r\n\r\nconst samples = {};\r\n\r\nnotes.forEach(note => {\r\n    let noteFilename = note;\r\n    if(note.includes(\"#\")) {\r\n        noteFilename = note.replace(\"#\",\"sharp\");\r\n    }\r\n    samples[note] = `${samplePath+noteFilename}v${velocity}.wav`;\r\n});\r\n\r\nconsole.log(samples);\r\n\r\nexport default samples;","import * as Tone from 'tone';\r\nimport Samples from './Samples';\r\n\r\nconst piano = new Tone.Sampler(Samples, () => {\r\n\tconsole.log(\"loaded piano\");\r\n}).chain(Tone.Master);\r\n\r\nexport default piano;","import React from 'react';\r\nimport classes from './PlayButton.module.css';\r\n\r\nconst playButton = (props) => {\r\n    return (\r\n        <button onClick={props.togglePlay} className={classes.playButton}>\r\n            ▷\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default playButton;","const notes = [\"A2\",\"A3\",\"B2\",\"B4\",\"C4\",\"D3\",\"D5\",\"E4\",\"F#3\",\"G2\",\"G4\"];\r\nconst samplePath = `${process.env.PUBLIC_URL}/ViolinsSamples/`;\r\nconst instrument = \"VlnEns_susVib_\";\r\nconst velocity = \"_v1\";\r\n\r\nconst samples = {};\r\n\r\nnotes.forEach(note => {\r\n    let noteFilename = note;\r\n    if(note.includes(\"#\")) {\r\n        noteFilename = note.replace(\"#\",\"sharp\");\r\n    }\r\n    samples[note] = `${samplePath+instrument+noteFilename+velocity}.wav`;\r\n});\r\n\r\nconsole.log(samples);\r\n\r\nexport default samples;","import * as Tone from 'tone';\r\nimport Samples from './Samples';\r\n\r\nconst r = new Tone.Freeverb(0.9,4000);\r\nconst sw = new Tone.StereoWidener(0.9);\r\nconst vol = new Tone.Volume(-18);\r\nconst f = new Tone.Filter(3690, \"lowpass\");\r\n\r\nconst violins = new Tone.Sampler(Samples, () => {\r\n\tconsole.log(\"loaded violins\");\r\n}).chain(f, r, sw, vol, Tone.Master);\r\n\r\nexport default violins;","const notes = [\"A2\",\"A3\",\"B2\",\"B4\",\"C4\",\"D3\",\"D5\",\"E4\",\"F#3\",\"G2\",\"G4\"];\r\nconst samplePath = `${process.env.PUBLIC_URL}/ViolinsSamples/`;\r\nconst instrument = \"VlnEns_Pizz_\";\r\nconst velocity = \"_v1_rr2\";\r\n\r\nconst samples = {};\r\n\r\nnotes.forEach(note => {\r\n    let noteFilename = note;\r\n    if(note.includes(\"#\")) {\r\n        noteFilename = note.replace(\"#\",\"sharp\");\r\n    }\r\n    samples[note] = `${samplePath+instrument+noteFilename+velocity}.wav`;\r\n});\r\n\r\nconsole.log(samples);\r\n\r\nexport default samples;","import * as Tone from 'tone';\r\nimport Samples from './PizzSamples';\r\n\r\nconst r = new Tone.Freeverb(0.9,4000);\r\nconst sw = new Tone.StereoWidener(0.9);\r\nconst vol = new Tone.Volume(-18);\r\nconst f = new Tone.Filter(3690, \"lowpass\");\r\n\r\nconst violinPizz = new Tone.Sampler(Samples, () => {\r\n\tconsole.log(\"loaded violins\");\r\n}).chain(f, r, sw, vol, Tone.Master);\r\n\r\nexport default violinPizz;","import React from 'react';\r\nimport * as Tone from 'tone';\r\nimport Piano from '../../Piano/Piano';\r\nimport PlayButton from './PlayButton/PlayButton';\r\nimport classes from './ToneAudio.module.css';\r\nimport Violins from '../../Violins/Violins';\r\nimport Pizz from '../../Violins/Pizz';\r\n\r\nclass ToneAudio extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props.notes);\r\n\r\n        this.melody = new Tone.Loop(time => {\r\n            if(Math.random()*2<1){\r\n                const noteIdx = Math.floor(Math.random()*props.notes.length);\r\n                const note = props.notes[noteIdx];\r\n                Piano.triggerAttack(note);\r\n                props.setNotePlayed(note);\r\n            }\r\n        }, \"4n\");\r\n\r\n        this.bass = new Tone.Loop(time => {\r\n            if(Math.random()*2<1.3){\r\n                const noteIdx = Math.floor(Math.random()*props.notes.length);\r\n                const note = Tone.Frequency(props.notes[noteIdx]).transpose(-24);\r\n                Piano.triggerAttack(note);\r\n            }\r\n        }, \"2n\");\r\n\r\n        this.harmony = new Tone.Loop(time => {\r\n            if(Math.random()*2<0.7){\r\n                const notes = [];\r\n                const n = Math.floor(Math.random()*3+1);\r\n                for(let i = 0; i < n; i++) {\r\n                    const noteIdx = Math.floor(Math.random()*props.notes.length);\r\n                    const note = Tone.Frequency(props.notes[noteIdx]).transpose(0);\r\n                    notes.push(note);\r\n                }\r\n                const duration = (Math.floor(Math.random()*4+1))+\"n\";\r\n                if(Math.random()<0.25)\r\n                    Pizz.triggerAttackRelease(notes,duration);\r\n                else\r\n                    Violins.triggerAttackRelease(notes,duration);\r\n            }\r\n        }, \"2m\");\r\n\r\n\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.notes !== this.props.notes) {\r\n            if (Tone.Transport.state === \"started\") {\r\n                this.togglePlay();\r\n            }\r\n\r\n            this.melody.dispose();\r\n            this.bass.dispose();\r\n            this.harmony.dispose();\r\n            \r\n            this.melody = new Tone.Loop(time => {\r\n                if(Math.random()*2<1){\r\n                    const noteIdx = Math.floor(Math.random()*this.props.notes.length);\r\n                    const note = this.props.notes[noteIdx];\r\n                    Piano.triggerAttack(note);\r\n                    this.props.setNotePlayed(note);\r\n                }\r\n            }, \"4n\");\r\n    \r\n            this.bass = new Tone.Loop(time => {\r\n                if(Math.random()*2<1.3){\r\n                    const noteIdx = Math.floor(Math.random()*this.props.notes.length);\r\n                    const note = Tone.Frequency(this.props.notes[noteIdx]).transpose(-24);\r\n                    Piano.triggerAttack(note);\r\n                }\r\n            }, \"2n\");\r\n\r\n            this.harmony = new Tone.Loop(time => {\r\n                if(Math.random()*2<0.7){\r\n                    const notes = [];\r\n                    const n = Math.floor(Math.random()*3+1);\r\n                    for(let i = 0; i < n; i++) {\r\n                        const noteIdx = Math.floor(Math.random()*this.props.notes.length);\r\n                        const note = Tone.Frequency(this.props.notes[noteIdx]).transpose(0);\r\n                        notes.push(note);\r\n                    }\r\n                    const duration = (Math.floor(Math.random()*4+1))+\"n\";\r\n                    if(Math.random()<0.25)\r\n                        Pizz.triggerAttackRelease(notes,duration);\r\n                    else\r\n                        Violins.triggerAttackRelease(notes,duration);\r\n                }\r\n            }, \"2m\");\r\n\r\n        }\r\n    }\r\n\r\n    togglePlay() {\r\n        if (Tone.Transport.state === \"started\") {\r\n            Tone.Transport.stop();\r\n            console.log(\"stopping music..\");\r\n        } else {\r\n            this.bass.start(0);\r\n            this.melody.start(0);\r\n            this.harmony.start(0);\r\n            Tone.Transport.start();\r\n            console.log(\"playing music..\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.toneAudio}>\r\n                <PlayButton togglePlay={this.togglePlay}/>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default ToneAudio;","import React from 'react';\r\nimport classes from './About.module.css';\r\n\r\nconst about = (props) => {\r\n    return (\r\n        <div className={classes.about}>\r\n            <div className={classes.aboutMain}>\r\n                <h1>ABOUT LODESTONE</h1>\r\n                <p>\r\n                    Lodestone is a chord dictionary\r\n                    equipped with audiovisual tools\r\n                    to facilitate exploration\r\n                    and inspiration.\r\n                </p>\r\n            </div>\r\n            <div className={classes.aboutHelp}>\r\n                <h2>HOW TO USE LODESTONE</h2>\r\n                <div className={classes.aboutHelpContent}>\r\n                    <div>\r\n                        <h3>EXPLORE</h3>\r\n                        <h4>Need inspiration?</h4>\r\n                        <p>\r\n                            The EXPLORE button will find you a chord page\r\n                            to help kickstart those musical gears! \r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <h3>CREATE</h3>\r\n                        <h4>Already know what you're looking for?</h4>\r\n                        <p>\r\n                            The CREATE button launches a chord builder\r\n                            for making your own chords from scratch!\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <h3>PLAY</h3>\r\n                        <h4>Tired of theory?</h4>\r\n                        <p>\r\n                            Hear those intervals interact in your chord\r\n                            by toggling the play button\r\n                            located in the bottom right of your screen!\r\n                            Press again to toggle the music off!\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default about;","import React from 'react';\r\nimport classes from './NoteButton.module.css';\r\n\r\nconst noteButton = (props) => {\r\n    const toggled = props.toggled ? (props.singleToggle ? classes.onSingle : classes.on) : classes.off;\r\n\r\n\r\n    return (\r\n        <button className={toggled + \" \" + classes.noteButton}\r\n                onClick={() => props.toggleHandler(props.idx)}>\r\n            {props.note}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default noteButton;","import React, {useState} from 'react';\r\nimport classes from './ChordCreator.module.css';\r\nimport NoteButton from '../NoteButton/NoteButton';\r\n\r\nconst notes = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"];\r\n\r\nconst ChordCreator = (props) => {\r\n    const [buttons, setButtons] = useState(new Array(12).fill(false));\r\n\r\n    const toggleHandler = (idx) => {\r\n        let updatedButtons = [...buttons];\r\n        updatedButtons.splice(idx, 1, !buttons[idx]);\r\n        setButtons(updatedButtons);\r\n    }\r\n\r\n    const noteButtons = notes.map((note,idx) => {\r\n        return (\r\n            <NoteButton key={idx}\r\n                idx={idx} \r\n                note={note}\r\n                toggleHandler={toggleHandler}\r\n                toggled={buttons[idx]}/>\r\n        );\r\n    });\r\n\r\n    const selectedNotes = notes.filter((note,idx) => buttons[idx]).map(note => {\r\n        return (\r\n            <p key={note}>{note}</p>\r\n        );\r\n    });\r\n\r\n    const filler = <p className={classes.filler}>Create a Chord!</p>;\r\n\r\n    const center = selectedNotes.length ? selectedNotes : filler;\r\n\r\n    const getIntervals = () => {\r\n        const intervals = [];\r\n        for (let i = 0; i < buttons.length; i++) {\r\n            if(buttons[i]) {\r\n                intervals.push(i);\r\n            }\r\n        }\r\n        while (intervals.length<3) {\r\n            intervals.push(0);\r\n        }\r\n        return intervals;\r\n    };\r\n\r\n    const updateTone = () => {\r\n        props.setRoot(\"C\");\r\n        props.setIntervals(getIntervals());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.chordCreator}>\r\n                <div className={classes.noteButtons}>\r\n                    {noteButtons}\r\n                    <div className={classes.selectedNotes}>\r\n                        {center}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.save}>\r\n                <h2>Save Your Chord and Listen to It!</h2>\r\n                <button onClick={updateTone}>Save Your Chord</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordCreator;","import React from 'react';\r\nimport classes from './SelectorPage.module.css';\r\n\r\nconst selectorPage = (props) => {\r\n    return (\r\n        <div className={classes.selectorPage}>\r\n            <h2 className={classes.title}>{props.title.toUpperCase()}</h2>\r\n            <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default selectorPage;","import React, { useState} from 'react';\r\nimport classes from './RootSelector.module.css';\r\nimport SelectorPage from '../SelectorPage/SelectorPage';\r\nimport NoteButton from '../../NoteButton/NoteButton';\r\n\r\nconst notes = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"];\r\n\r\nconst RootSelector = (props) => {\r\n\r\n    const noteButtons = notes.map((note,idx) => {\r\n        return (\r\n            <NoteButton key={idx}\r\n                idx={idx} \r\n                note={note}\r\n                toggleHandler={props.selectRoot}\r\n                toggled={note === props.root}\r\n                singleToggle />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <SelectorPage title=\"select a chord root\">\r\n            <div className={classes.noteButtons}>\r\n                {noteButtons}\r\n                <h1>{props.root}</h1>\r\n            </div>\r\n        </SelectorPage>\r\n    );\r\n}\r\n\r\nexport default RootSelector;","import React from 'react';\r\nimport classes from './Shape.module.css';\r\n\r\nconst Shape = (props) => {\r\n\r\n    const points = [];\r\n    const angle = 2 * Math.PI / props.vertices;\r\n    for (let i = 0; i < props.vertices; i++) {\r\n        const x = props.radius * (1 + Math.cos(i * angle));\r\n        const y = props.radius * (1 + Math.sin(i * angle));\r\n        points.push(`${x},${y}`);\r\n    }\r\n    const path = points.join(' ');\r\n\r\n    return (\r\n        <svg height={props.radius*2} width={props.radius*2} className={classes.shape}>\r\n            <polygon points={path} className={classes.poly} />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Shape;","import React from 'react';\r\nimport classes from './ShapeSelector.module.css';\r\nimport SelectorPage from '../SelectorPage/SelectorPage';\r\nimport Shape from './Shape/Shape';\r\n\r\nconst shapes = [\"triad\",\"seventh\",\"ninth\",\"eleventh\",\"thirteenth\"];\r\n\r\nconst ShapeSelector = (props) => {\r\n\r\n    const increaseVertices = () => {\r\n        if(props.shape < 7)\r\n            props.setShape(props.shape+1);\r\n    }\r\n\r\n    const decreaseVertices = () => {\r\n        if(props.shape > 3)\r\n            props.setShape(props.shape-1);\r\n    }\r\n\r\n    return (\r\n        <SelectorPage title=\"select a chord shape\">\r\n            <div className={classes.shapeSelector}>\r\n                <button onClick={decreaseVertices}\r\n                        className={classes.btn + \" \" + classes.subBtn}>{\"<\"}</button>\r\n                <div className={classes.shape}>\r\n                    <Shape  vertices={props.shape} radius={150} />\r\n                </div> \r\n                <button onClick={increaseVertices}\r\n                        className={classes.btn + \" \" + classes.addBtn}>{\">\"}</button>\r\n                <h3 className={classes.shapeName}>{shapes[props.shape-3].toUpperCase()}</h3>\r\n            </div>\r\n        </SelectorPage>\r\n    );\r\n}\r\n\r\nexport default ShapeSelector;","const triads = {\r\n    \"maj\": {\r\n        intervals: [0,4,7],\r\n        traits: [\"happy\"],\r\n    },\r\n    \"min\": {\r\n        intervals: [0,3,7],\r\n        traits: [\"sad\"],\r\n    },\r\n    \"aug\": {\r\n        intervals: [0,4,8],\r\n        traits: [\"curious\"],\r\n    },\r\n    \"dim\": {\r\n        intervals: [0,3,6],\r\n        traits: [\"suspenseful\"],\r\n    },\r\n    \"5\": {\r\n        intervals: [0,7,12],\r\n        traits: [\"primal\"],\r\n    },\r\n    \"b5\": {\r\n        intervals: [0,4,6],\r\n        traits: [\"mystic\"],\r\n    },\r\n    \"sus2\": {\r\n        intervals: [0,2,7],\r\n        traits: [\"dreamy\"],\r\n    },\r\n    \"sus4\": {\r\n        intervals: [0,5,7],\r\n        traits: [\"ethereal\"],\r\n    }\r\n};\r\n\r\nconst sevenths = {\r\n    \"7\": {\r\n        intervals: [0,4,7,10],\r\n        traits: [\"compelling\"],\r\n    },\r\n    \"maj7\": {\r\n        intervals: [0,4,7,11],\r\n        traits: [\"romantic\"],\r\n    },\r\n    \"min7\": {\r\n        intervals: [0,3,7,10],\r\n        traits: [\"beautiful\"],\r\n    },\r\n    \"mM7\": {\r\n        intervals: [0,3,7,11],\r\n        traits: [\"supernatural\"],\r\n    },\r\n    \"dim7\": {\r\n        intervals: [0,3,6,9],\r\n        traits: [\"ominous\"],\r\n    },\r\n    \"half dim7\": {\r\n        intervals: [0,3,6,10],\r\n        traits: [\"dramatic\"],\r\n    },\r\n    \"aug7\": {\r\n        intervals: [0,4,8,11],\r\n        traits: [\"magical\"],\r\n    },\r\n    \"7b5\": {\r\n        intervals: [0,4,6,10],\r\n        traits: [\"uncertain.\"],\r\n    },\r\n    \"7#5\": {\r\n        intervals: [0,4,8,10],\r\n        traits: [\"unusual\"],\r\n    },\r\n    \"7sus4\": {\r\n        intervals: [0,5,7,10],\r\n        traits: [\"elegant\"],\r\n    },\r\n    \"6\": {\r\n        intervals: [0,4,7,9],\r\n        traits: [\"warm\"],\r\n    },\r\n    \"min6\": {\r\n        intervals: [0,3,7,9],\r\n        traits: [\"mysterious\"],\r\n    }\r\n};\r\n\r\nconst ninths = {\r\n    \"9\": {\r\n        intervals: [0,4,7,10,14],\r\n        traits: [\"optimistic\"],\r\n    },\r\n    \"maj9\": {\r\n        intervals: [0,4,7,11,14],\r\n        traits: [\"uplifitng\"],\r\n    },\r\n    \"min9\": {\r\n        intervals: [0,3,7,10,14],\r\n        traits: [\"nostaglic\"],\r\n    },\r\n    \"9b5\": {\r\n        intervals: [0,4,6,10,14],\r\n        traits: [\"agitated\"],\r\n    },\r\n    \"9#5\": {\r\n        intervals: [0,4,8,10,14],\r\n        traits: [\"perplexing\"],\r\n    },\r\n    \"7b9\": {\r\n        intervals: [0,4,7,10,13],\r\n        traits: [\"distressing\"],\r\n    },\r\n    \"7#9\": {\r\n        intervals: [0,4,7,10,15],\r\n        traits: [\"suprising\"],\r\n    },\r\n    \"9sus4\": {\r\n        intervals: [0,5,7,10,14],\r\n        traits: [\"majestic\"],\r\n    },\r\n    \"6/9\": {\r\n        intervals: [0,4,7,9,14],\r\n        traits: [\"soothing\"],\r\n    },\r\n};\r\n\r\nconst elevenths = {\r\n    \"11\": {\r\n        intervals: [0,4,7,10,14,17],\r\n        traits: [\"anticipating\"],\r\n    },\r\n    \"min11\": {\r\n        intervals: [0,3,7,10,14,17],\r\n        traits: [\"reflective\"],\r\n    }\r\n}\r\n\r\nconst thirteenths = {\r\n    \"13\": {\r\n        intervals: [0,4,7,10,14,17,21],\r\n        traits: [\"hopeful\"],\r\n    },\r\n    \"maj13\": {\r\n        intervals: [0,4,7,11,14,18,21],\r\n        traits: [\"thoughtful\"],\r\n    }   \r\n}\r\n\r\nconst chords = [triads,sevenths,ninths,elevenths,thirteenths];\r\nexport default chords;","import React from 'react';\r\nimport classes from './QualitySelector.module.css';\r\nimport SelectorPage from '../SelectorPage/SelectorPage';\r\nimport chords from '../../../Chords';\r\n\r\nconst QualitySelector = (props) => {\r\n\r\n    const qualities = Object.entries(chords[props.shape-3]).map(entry => \r\n        <button key={entry}\r\n                onClick={() => props.setQuality(entry[0])}\r\n                className={classes.btn}>\r\n            {entry[0]}\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <SelectorPage title=\"select a chord quality\">\r\n            <div className={classes.qualities}>\r\n                {qualities}\r\n            </div>\r\n        </SelectorPage>\r\n    );\r\n}\r\n\r\nexport default QualitySelector;","import React, { useState } from 'react';\r\nimport classes from './ChordFinder.module.css';\r\nimport SelectorPage from './SelectorPage/SelectorPage';\r\nimport RootSelector from './RootSelector/RootSelector';\r\nimport ShapeSelector from './ShapeSelector/ShapeSelector';\r\nimport QualitySelector from './QualitySelector/QualitySelector';\r\nimport { Router, Link } from 'react-router-dom';\r\n\r\nconst notes = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"];\r\n\r\nconst ChordFinder = (props) => {\r\n\r\n    const [root,setRoot] = useState(\"C\");\r\n    const [shape,setShape] = useState(3);\r\n    const [quality,setQuality] = useState(\"maj\");\r\n    \r\n    const selectRoot = (idx) => {\r\n        setRoot(notes[idx]);\r\n    }\r\n\r\n    const submitChord = () => {\r\n        props.setRoot(root);\r\n        props.setShape(shape);\r\n        props.setQuality(quality);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <RootSelector root={root} selectRoot={selectRoot}  />\r\n            <ShapeSelector shape={shape} setShape={setShape}  />\r\n            <QualitySelector shape={shape} setQuality={setQuality}/>\r\n            <SelectorPage title=\"result\">\r\n                <div className={classes.result}>\r\n                    <h1>{root+quality}</h1>\r\n                    <Link   to=\"/\" onClick={submitChord}\r\n                            className={classes.link}>\r\n                        Find this Chord\r\n                    </Link>\r\n                </div>\r\n            </SelectorPage>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChordFinder;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport classes from './ToneWrapper.module.css';\r\nimport Header from '../Header/Header';\r\nimport ChordPage from '../ChordPage/ChordPage';\r\nimport ToneAudio from '../ToneAudio/ToneAudio';\r\nimport About from '../About/About';\r\nimport ChordCreator from '../ChordCreator/ChordCreator';\r\nimport ChordFinder from '../ChordFinder/ChordFinder';\r\nimport chords from '../../Chords';\r\nimport * as Tone from 'tone';\r\n\r\nconst ToneWrapper = (props) => {\r\n    const [root,setRoot] = useState(\"C\");\r\n    const [quality,setQuality] = useState(\"maj\");\r\n    const [shape,setShape] = useState(3);\r\n    const [intervals,setIntervals] = useState(chords[0].maj.intervals);\r\n    const [traits,setTraits] = useState(chords[0].maj.traits);\r\n    const [notes,setNotes] = useState(Tone.Frequency(root+\"4\").harmonize(intervals).map(note => note.toNote()));\r\n    const [notePlayed, setNotePlayed] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setNotes(Tone.Frequency(root+\"4\").harmonize(intervals).map(note => note.toNote()));\r\n    }, [root]);\r\n\r\n    useEffect(() => {\r\n        setNotes(Tone.Frequency(root+\"4\").harmonize(intervals).map(note => note.toNote()));\r\n    }, [intervals]);\r\n\r\n    useEffect(() => {\r\n        setIntervals(chords[shape-3][quality].intervals);\r\n        setTraits(chords[shape-3][quality].traits);\r\n    }, [quality]);\r\n    \r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Route path={['/','/lodestone']} exact render={() => <ChordPage  root={root}\r\n                                                                quality={quality}\r\n                                                                notes={notes}\r\n                                                                traits={traits}\r\n                                                                notePlayed={notePlayed} />} />\r\n                <Route path='/explore' exact render={() => <ChordFinder setRoot={setRoot}\r\n                                                                        setShape={setShape}\r\n                                                                        setQuality={setQuality} />} />\r\n                <Route path='/about' exact component={About} />\r\n                <Route path='/create' exact render={() => <ChordCreator setRoot={setRoot}\r\n                                                                        setIntervals={setIntervals} />} />\r\n                <ToneAudio  setNotePlayed={setNotePlayed}\r\n                            notes={notes}/>\r\n            </BrowserRouter>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToneWrapper;","import React from 'react';\nimport './App.css';\nimport ToneWrapper from './Components/ToneWrapper/ToneWrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToneWrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}